variables:
  DOCKER_REGISTRY: "nexus.informatik.haw-hamburg.de"
  DO_DEFAULT: "cies-default"
  DO_SEND_REPORT: "cies-send-report"
  DO_LINUX_ANAYLYSE: "cies-linux-analyse"
  PYSCRIPT_PATH: "/pyscripts"
  PROJECT_DIR: "PROJECT"
  SCRIPT_DIR: "SCRIPT"
  REPORT_DIR: "REPORT"
  GITSHA_FILE: "gitsha.txt"


  # Testrepro?
  {% if p.CDR_ID == 1044 -%}
  DO_VERSION: "latest"
  {%- else -%}
  DO_VERSION: "stable"
  {%- endif %}

stages:
  - setup
  - analyze
  - store_and_deliver

setup:
  stage: setup
  image: $DOCKER_REGISTRY/$DO_DEFAULT:$DO_VERSION
  artifacts:
    name: ${CI_PIPELINE_ID}
    untracked: true
    paths:
      - ./$PROJECT_DIR/
      - ./$GITSHA_FILE
      - ./$SCRIPT_DIR/
      - ./$REPORT_DIR/
    when: on_success
    expire_in: 2 hrs
  before_script:
  # setup SSH if on ubuntu
    - pwd
  script:
    - python3 $PYSCRIPT_PATH/setup_pipeline.py $CDR_ID $PROJECT_DIR $SCRIPT_DIR $REPORT_DIR $GITSHA_FILE $PYSCRIPT_PATH

gitsha_pipe:
  stage: analyze
  image: $DOCKER_REGISTRY/$DO_DEFAULT:$DO_VERSION
  artifacts:
    name: ${CI_PIPELINE_ID}
    untracked: true
    paths:
      - ./$GITSHA_FILE
    when: on_success
    expire_in: 4 hrs
  script:
    - cat ./$GITSHA_FILE

static:
  stage: analyze
  image: $DOCKER_REGISTRY/$DO_LINUX_ANAYLYSE:stable
  artifacts:
    name: ${CI_PIPELINE_ID}
    untracked: true
    paths:
      - ./$REPORT_DIR/
    when: on_success
    expire_in: 4 hrs
  script:
    - bash ./$SCRIPT_DIR/$CI_JOB_NAME.sh
  after_script:
    - mv ./report.json ./$REPORT_DIR/$CI_JOB_NAME.json


dynamic:
  stage: analyze
  image: $DOCKER_REGISTRY/$DO_LINUX_ANAYLYSE:stable
  artifacts:
    name: ${CI_PIPELINE_ID}
    untracked: true
    paths:
      - ./$REPORT_DIR/
    when: on_success
    expire_in: 4 hrs
  script:
    - bash ./$SCRIPT_DIR/$CI_JOB_NAME.sh
  after_script:
    - mv ./report.json ./$REPORT_DIR/$CI_JOB_NAME.json


style_check:
  stage: analyze
  image: $DOCKER_REGISTRY/$DO_LINUX_ANAYLYSE:stable
  artifacts:
    name: ${CI_PIPELINE_ID}
    untracked: true
    paths:
      - ./$REPORT_DIR/
    when: on_success
    expire_in: 4 hrs
  script:
    - bash ./$SCRIPT_DIR/$CI_JOB_NAME.sh
  after_script:
    - mv ./report.json ./$REPORT_DIR/$CI_JOB_NAME.json


# store reports ind DB and send report to customer
store_and_deliver:
  stage: store_and_deliver
  image: $DOCKER_REGISTRY/$DO_SEND_REPORT:$DO_VERSION
  before_script:
    - GIT_SHA=$(cat ./$GITSHA_FILE)
    - echo $GIT_SHA
  script:
    - ls -la ./$PROJECT_DIR/
    - cat ./$GITSHA_FILE
    - ls -la ./$SCRIPT_DIR/
    - ls -la ./$REPORT_DIR/
    - python3 $PYSCRIPT_PATH/store_and_deliver_reports.py $CDR_ID $GIT_SHA "./$REPORT_DIR"
    - cat ./report-delivery.sh
    - bash ./report-delivery.sh
#
